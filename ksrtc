//package com.span.onlyoffice;

//import java.util.Iterator;
//import java.util.List;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;









import org.apache.james.mime4j.field.datetime.DateTime;
//import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.NoAlertPresentException;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
//import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class TestRun {
	private WebDriver driver;
	private String baseUrl;
	private WebDriverWait wait;
	@BeforeTest
	public void setUp() throws Exception {
		driver = new FirefoxDriver();
		baseUrl = "http://www.ksrtc.in/site/";
		wait = new WebDriverWait(driver, 45);
		driver.manage().timeouts().implicitlyWait(45, TimeUnit.SECONDS);
	}

	@Test
	public void testUntitled() throws Exception {
		driver.manage().window().maximize();
		driver.get(baseUrl);
		source("BAN","bangalore");
		destination("hub","hubli");
		//dateSelection("01","November","2014");
		//dateSelection("01","October","2014");
		dateSelection("32","November","2014");
		Thread.sleep(3000);
	}
	
	public void source(String searchKey, String startPlace){
		WebElement srcField;
		List<WebElement> recommendations;
		srcField = driver.findElement(By.xpath(".//input[@id='matchStartPlace']"));
		srcField.sendKeys(searchKey);
		WebDriverWait  wait = new WebDriverWait(driver,20);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.
				xpath(".//ul[contains(@id,'ui-id-') and contains(@style,'display: block')]")));
		recommendations = driver.findElements(By.
				xpath(".//ul[contains(@id,'ui-id-') and contains(@style,'display: block')]/li[@class='ui-menu-item']"));
		for (WebElement we: recommendations){
			we = we.findElement(By.tagName("a"));
			if(we.getText().equalsIgnoreCase(startPlace)) we.click();
		}
	}
	public void destination(String searchKey, String endPlace){
		WebElement destField;
		List<WebElement> recommendations;
		destField = driver.findElement(By.xpath(".//input[@id='matchEndPlace']"));
		destField.sendKeys(searchKey);
		WebDriverWait  wait = new WebDriverWait(driver,15);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.
				xpath(".//ul[contains(@id,'ui-id-') and contains(@style,'display: block')]")));
		/*recommendations = driver.findElements(By.
				xpath(".//ul[contains(@id,'ui-id-') and contains(@style,'display: block')]/li[@class='ui-menu-item']"));
		for (WebElement we: recommendations){
			we = we.findElement(By.tagName("a"));
			if(we.getText().equalsIgnoreCase(endPlace)) we.click();
		}*/
		driver.findElement(By.
				xpath(".//ul[contains(@id,'ui-id-') and contains(@style,'display: block')]"
						+ "//a[text()='"+endPlace.toUpperCase()+"']")).click();
	}
	
	public void dateSelection(String day, String month, String year)
	{
		WebElement dateSelect;
		DateFormat formatter = new SimpleDateFormat("dd MMM yyyy");
		DateFormat formatter2 = new SimpleDateFormat("dd MM yyyy");
		Date curDate=null,reqDate = null;
		dateSelect = driver.findElement(By.xpath(".//input[@id='txtdeptDateRtrip']"));
		dateSelect.click();
		WebDriverWait  wait = new WebDriverWait(driver,15);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.
				xpath(".//div[@id='ui-datepicker-div']")));
		String cMnth,cYear,nMnth,nYear,curBlock,nxtBlock;
		curBlock =".//div[@class='ui-datepicker-group ui-datepicker-group-first']//table[@class='ui-datepicker-calendar']//tbody";
		nxtBlock=".//div[@class='ui-datepicker-group ui-datepicker-group-last']//table[@class='ui-datepicker-calendar']//tbody";
		cMnth=".//div[@class='ui-datepicker-group ui-datepicker-group-first']//span[@class='ui-datepicker-month']";
		cYear=".//div[@class='ui-datepicker-group ui-datepicker-group-first']//span[@class='ui-datepicker-year']";
		nMnth=".//div[@class='ui-datepicker-group ui-datepicker-group-last']//span[@class='ui-datepicker-month']";
		nYear=".//div[@class='ui-datepicker-group ui-datepicker-group-last']//span[@class='ui-datepicker-year']";
		
		WebElement curMonth = driver.findElement(By.xpath(cMnth));
		WebElement curYear = driver.findElement(By.xpath(cYear));
		WebElement nxtMonth = driver.findElement(By.xpath(nMnth));
		WebElement nxtYear = driver.findElement(By.xpath(nYear));
			
		/* Calendar cal = Calendar.getInstance();
		 try {
			cal.setTime(new SimpleDateFormat("DD/MMMM/YYYY").parse(day+"/"+month+"/"+year));
		} catch (ParseException e) {
			e.printStackTrace();
		}*/
		 
		 //System.out.println(monthInt+"\t"+cal.getTime());
		//System.out.println(curMonth.getText()+"\t"+curYear.getText()+"\t"+nxtMonth.getText()+"\t"+nxtYear.getText());
		if(!(curYear.getText().equals(year)||nxtYear.getText().equals(year)))
			Assert.assertTrue(false, "FAILED YEAR VALIDATION");
		if(!(curMonth.getText().equalsIgnoreCase(month)||nxtMonth.getText().equalsIgnoreCase(month)))
			Assert.assertTrue(false, "FAILED MONTH VALIDATION");
		String today=".//div[contains(@class,'ui-datepicker-group ui-datepicker-group-')]//table[@class='ui-datepicker-calendar']//tbody//tr//td[contains(@class,'ui-datepicker-current-day')]";
		try {
			 /*Date d1,d2;
			 d1=(Date)formatter.parse("30 October 2014");
			 d2=(Date)formatter.parse("29 November 2014");
			 System.out.println((d2.getTime()-d1.getTime())/(1000 * 60 * 60 * 24));*/
			WebElement we = driver.findElement(By.xpath(today));
			we.getAttribute("data-year");
			curDate = (Date)formatter2.parse(we.findElement(By.tagName("a")).getText()
					+" "+(Integer.parseInt(we.getAttribute("data-month"))+1)+" "+we.getAttribute("data-year"));
			//System.out.println(curDate);
			 reqDate = (Date)formatter.parse(day+" "+month+" "+year);
			//System.out.println(reqDate+"\t"+reqDate.getDate()+"\t"+reqDate.getMonth());
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if(reqDate.getTime()>curDate.getTime()){
		if(((reqDate.getTime()-curDate.getTime())/(1000 * 60 * 60 * 24))<=30){
			String desiredDate = ".//div[contains(@class,'ui-datepicker-group ui-datepicker-group-')]//table[@class='ui-datepicker-calendar']//tbody//tr//td[@data-year='"
					+ year
					+ "' and @data-month='"
					+ reqDate.getMonth()
					+ "']//a[text()='" + reqDate.getDate() + "']";
			driver.findElement(By.xpath(desiredDate)).click();
			//System.out.println(desiredDate);
		}
		}
		else{
			String desiredDate = ".//div[contains(@class,'ui-datepicker-group ui-datepicker-group-')]//table[@class='ui-datepicker-calendar']//tbody//tr//td[contains(@class,'ui-datepicker-unselectable ui-state-disabled')]//span"
					+ "[text()='"+reqDate.getDate()+"']";
			try{
			driver.findElement(By.xpath(desiredDate)).click();
			}catch(NoSuchElementException e)
			{
				Assert.assertTrue(false,"No Such Element Found! Test Failed.");
			}
		}
		driver.findElement(By.xpath(".//a[@title='Search For Services']")).click();
		/*
		.//div[@class='ui-datepicker-group ui-datepicker-group-last']//table[@class='ui-datepicker-calendar']//tbody//tr//td[@data-event='click']
		
		.//div[contains(@class,'ui-datepicker-group ui-datepicker-group-')]//table[@class='ui-datepicker-calendar']//tbody//tr//td[@data-year='2014' and @data-month='10']
		
		.//div[contains(@class,'ui-datepicker-group ui-datepicker-group-')]//table[@class='ui-datepicker-calendar']//tbody//tr//td[@data-year='2014' and @data-month='9']
		
		.//div[contains(@class,'ui-datepicker-group ui-datepicker-group-')]//table[@class='ui-datepicker-calendar']//tbody//tr//td
		*/
	}
	@AfterTest
	public void tearDown() throws Exception {
		driver.quit();
	}
}
